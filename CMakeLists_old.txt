# CMakeLists for Rainette
# Author: N. Oblath
# Date: Jan 15, 2018

# Minimum cmake verison 3.1 required for the variable CMAKE_CXX_STANDARD
cmake_minimum_required (VERSION 3.1)

#########
# Setup #
#########

cmake_policy( SET CMP0048 NEW ) # version in project()
project( Rainette VERSION 1.3.2 )

list( APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/ToolDAQFramework/src/vendor/scarab/cmake )
include( PackageBuilder )

pbuilder_prepare_project()

#################
# Rainette options #
#################

option( Rainette_ENABLE_KATYDID_NAMESPACE "Build an additional library with the Rainette classes defined additionally in the Katydid namespace" ON )
option (Rainette_ADD_Rainette_PY "Add PhylloxeraPy file in the build" ON )

######################
# Rainette dependencies #
######################

########
# Scarab
########

set_option( Scarab_BUILD_CODEC_JSON OFF )
set_option( Scarab_BUILD_CODEC_YAML OFF )
set_option( Scarab_BUILD_AUTHENTICATION OFF )
set_option( Scarab_BUILD_PARAM OFF )
set_option( Scarab_ENABLE_EXECUTABLES OFF )

pbuilder_add_submodule( ToolDAQFramework ToolDAQFramework )

######
# ROOT
######

find_package (ROOT 6.00)
if (ROOT_FOUND)
    pbuilder_add_ext_libraries (${ROOT_LIBRARIES})
    #message(STATUS "${ROOT_LIBRARIES}")
else (ROOT_FOUND)
    message(FATAL "Unable to find ROOT")
endif (ROOT_FOUND)
include_directories (${ROOT_INCLUDE_DIR})


# Boost (1.46 required for filesystem version 3)
list (APPEND Boost_COMPONENTS date_time filesystem iostreams program_options serialization system thread)
find_package (Boost 1.46.0 REQUIRED COMPONENTS ${Boost_COMPONENTS})
# make sure dynamic linking is assumed for all boost libraries
add_definitions (-DBOOST_ALL_DYN_LINK)
set( Boost_USE_STATIC_LIBS OFF )
set( Boost_USE_STATIC_RUNTIME OFF )
set( Boost_ALL_DYN_LINK ON )
pbuilder_add_ext_libraries (${Boost_LIBRARIES})
include_directories (${Boost_INCLUDE_DIRS})


################
# Build Rainette #
################

include_directories (BEFORE 
    ${PROJECT_SOURCE_DIR}/UserTools/MyTool
)

add_subdirectory( UserTools/MyTool )

# configure_file( this_cicada.sh.in this_cicada.sh )
# pbuilder_install_files( ${BIN_INSTALL_DIR} ${CMAKE_CURRENT_BINARY_DIR}/this_cicada.sh )

pbuilder_variables_for_parent()
